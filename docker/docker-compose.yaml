services:
  codeserv:
    image: codeserv

    build:
      context: ..
      dockerfile: docker/Dockerfile

    labels:
      caddy: code.jointheleague.org
      caddy.reverse_proxy: "{{upstreams 8000}}"
    depends_on:
      - postgres
    environment:
      JTL_DEPLOYMENT: "docker"
      DATABASE_URI: postgresql://pguser:password@postgres:5432/codeserver
      DOCKER_URI: ssh://root@docker2.dojtl.net

    volumes:
      - app-data:/app/data
  
    # Expose Flask app on host port 8090
    #ports:
    #  - "8092:8000"

    networks: # Must exist to recieve traffic from Caddy
      - caddy
      - jtlctl

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: password
      POSTGRES_DB: codeserver
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d codeserver -h 127.0.0.1"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - jtlctl


networks:
  caddy:
    external: true
    name: caddy
  jtlctl: # create with: `docker network create jtlctl` (bridge). For Swarm use overlay on stack deploy.
    external: true
    name: jtlctl

volumes:
  app-data:
  user-data:
  postgres-data:
  pgadmin-data:
