# 
#docker stack deploy -c docker-stack.yaml codeserve
services:
  codeserver:
    image: codeserver

    build:
      context: ..
      dockerfile: docker/Dockerfile

    # Duplicate labels here for docker-compose compatibility (container labels)
    #labels:
    #  caddy: code.jointheleague.org
    #  caddy.reverse_proxy: "{{upstreams 8000}}"

    deploy:
      replicas: 1
      labels:
        caddy: code.jointheleague.org
        caddy.reverse_proxy: "{{upstreams 8000}}"
      placement:
        constraints:
          - node.role == manager
   
    environment:
      JTL_DEPLOYMENT: "prod"

    volumes:
      - app-data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
      #- /mnt/student_repos:/mnt/student_repos

    ports:
      - "8092:8000"

    networks: # Must exist to recieve traffic from Caddy
      - caddy
      - jtlctl

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: password
      POSTGRES_DB: codeserver
    volumes:
      - postgres-data:/var/lib/postgresql/data
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d codeserver -h 127.0.0.1"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - jtlctl



networks:
  caddy:
    external: true
    name: caddy
  jtlctl: # docker network create --driver overlay --attachable jtlctl
    external: true
    name: jtlctl

volumes:
  app-data:
  postgres-data:
