""".

Revision ID: 7e52c0391e8a
Revises:
Create Date: 2025-03-17 10:42:14.574558

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "7e52c0391e8a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("sessions")
    with op.batch_alter_table("classes", schema=None) as batch_op:
        batch_op.add_column(sa.Column("public", sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column("running", sa.Boolean(), nullable=False, server_default=sa.false()))
        batch_op.add_column(sa.Column("running_at", sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column("stops_at", sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column("data", postgresql.JSON(astext_type=sa.Text()), nullable=True))
        batch_op.alter_column(
            "start_date",
            existing_type=postgresql.TIMESTAMP(),
            type_=sa.DateTime(timezone=True),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "end_date", existing_type=postgresql.TIMESTAMP(), type_=sa.DateTime(timezone=True), existing_nullable=True
        )
        batch_op.create_unique_constraint(None, ["class_code"])

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.add_column(sa.Column("is_anonymous", sa.Boolean(), nullable=False, server_default=sa.false()))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_column("is_anonymous")

    with op.batch_alter_table("classes", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")
        batch_op.alter_column(
            "end_date", existing_type=sa.DateTime(timezone=True), type_=postgresql.TIMESTAMP(), existing_nullable=True
        )
        batch_op.alter_column(
            "start_date",
            existing_type=sa.DateTime(timezone=True),
            type_=postgresql.TIMESTAMP(),
            existing_nullable=False,
        )
        batch_op.drop_column("data")
        batch_op.drop_column("stops_at")
        batch_op.drop_column("running_at")
        batch_op.drop_column("running")
        batch_op.drop_column("public")

    op.create_table(
        "sessions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("session_id", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("data", postgresql.BYTEA(), autoincrement=False, nullable=True),
        sa.Column("expiry", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="sessions_pkey"),
        sa.UniqueConstraint("session_id", name="sessions_session_id_key"),
    )
    # ### end Alembic commands ###
